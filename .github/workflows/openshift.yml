name: OpenShift

env:
  TOKEN: ${{ secrets.TOKEN }}  
  REGISTRY: quay.io/altugyildirim
  
  REGISTRY_USER: altugyildirim
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: default
  APP_NAME: reversewords 
  TAG: workshop

on:
  push:
    branches: 
      - dev
      - main

jobs:
  openshift-ci:
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    name: Build
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: download kondukto cli
      run: |
        curl -sSL https://cli.kondukto.io | sh

    - name: SCA
      run: |
        ./kdt --host https://demo5.kondukto.io --token ${{ secrets.KONDUKTO }}  scan -p devsecops_swoworkshop -t nancy -b dev 

    - name: SAST
      run: |
        ./kdt --host https://demo5.kondukto.io --token ${{ secrets.KONDUKTO }}  scan -p devsecops_swoworkshop -t gosec -b dev  

    - name: Unit Test
      run: |
        docker build -t reverseword_test:latest -f Dockerfile.test .
        docker run reverseword_test:latest



    # https://github.com/redhat-actions/buildah-build#readme
    - name: Build from Dockerfile
      uses: redhat-actions/buildah-build@v1
      with:
        image: ${{ env.APP_NAME }}
        tag: ${{ env.TAG }}
        # If you don't have a dockerfile, see:
        # https://github.com/redhat-actions/buildah-build#building-from-scratch
        # Otherwise, point this to your Dockerfile relative to the repository root.
        dockerfiles: |
          ./Dockerfile

# Container Vulnerability check
    - name: CS
      run: |
        ./kdt --host https://demo5.kondukto.io --token ${{ secrets.KONDUKTO }}  scan -p devsecops_swoworkshop -t trivy -b dev  

    # https://github.com/redhat-actions/push-to-registry#readme
    - name: Push to registry
      id: push-to-registry
      uses: redhat-actions/push-to-registry@v1
      with:
        image: ${{ env.APP_NAME }}
        tag: ${{ env.TAG }}
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}

    # The path the image was pushed to is now stored in ${{ steps.push-to-registry.outputs.registry-path }}

    # oc-login works on all platforms, but oc must be installed first.
    # The GitHub Ubuntu runner already includes oc.
    # Otherwise, https://github.com/redhat-actions/oc-installer#readme is available.
  openshift-cd-stage:
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    name: CD-stage
    runs-on: ubuntu-20.04
    needs: openshift-ci
    steps:
    - uses: actions/checkout@v2
    # https://github.com/redhat-actions/oc-login#readme
    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}



    - name: Helm
      run: |
        helm upgrade -f ./charts/values.yaml reverseword-stage ./charts --set environment=stage --set namespace=reverse-word-stage --set tag=${{ env.TAG}} -n helm-charts

    - name: DAST
      run: |
        ./kdt --host https://demo5.kondukto.io --token ${{ secrets.KONDUKTO }}  scan -p devsecops_swoworkshop -t owaspzapheadless -b dev 

  openshift-cd-prod:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: CD-prod
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    # https://github.com/redhat-actions/oc-login#readme
    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    - name: Helm
      run: |
        helm upgrade -f ./charts/values.yaml reverseword ./charts --set environment=prod --set namespace=reverse-word-prod --set tag=${{ env.TAG }} -n helm-charts
  pull-request:
   if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
   runs-on: ubuntu-latest
   needs: openshift-cd-stage
   steps:
   - uses: actions/checkout@v1
   - name: pull-request
     uses: repo-sync/pull-request@v2
     with:
       source_branch: ""
       destination_branch: "main"
       pr_title: "pulling ${{ github.run_id }} into main"
       pr_body: ":crown: *An automated PR*"
       pr_label: "auto-pr"
       github_token: ${{ env.TOKEN }}


